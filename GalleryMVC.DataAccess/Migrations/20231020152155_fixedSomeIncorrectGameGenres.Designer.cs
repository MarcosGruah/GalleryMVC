// <auto-generated />
using System;
using GalleryMVC.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GalleryMVC.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231020152155_fixedSomeIncorrectGameGenres")]
    partial class fixedSomeIncorrectGameGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.1.23419.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GalleryMVC.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b6a2dd3-d667-4045-9ba7-78a7a5bcf06e"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(284),
                            Developer = "CD PROJEKT RED",
                            GenreId = new Guid("c1f30a98-144f-4ef1-9b41-07d7a946a92c"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(287),
                            Price = 59.99m,
                            Publisher = "CD PROJEKT RED",
                            Title = "Cyberpunk 2077"
                        },
                        new
                        {
                            Id = new Guid("b7805a50-ddbb-45f6-a09a-d58a323879dc"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(293),
                            Developer = "Bethesda Game Studios",
                            GenreId = new Guid("7c3148a0-15f4-4e97-9d2f-1c035ab1e97a"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(293),
                            Price = 69.99m,
                            Publisher = "Bethesda Softworks",
                            Title = "Starfield"
                        },
                        new
                        {
                            Id = new Guid("2db1159d-f307-43ec-a486-6afc1f8e3e8d"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(297),
                            Developer = "Valve",
                            GenreId = new Guid("4bb407a1-128f-40e2-8363-5ff17312c87d"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(298),
                            Price = 0m,
                            Publisher = "Valve",
                            Title = "Dota 2"
                        },
                        new
                        {
                            Id = new Guid("2703cfa9-3a20-454e-a5f3-fea1392aae3a"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(300),
                            Developer = "Larian Studios",
                            GenreId = new Guid("c1f30a98-144f-4ef1-9b41-07d7a946a92c"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(301),
                            Price = 59.99m,
                            Publisher = "Larian Studios",
                            Title = "Baldur's Gate 3"
                        },
                        new
                        {
                            Id = new Guid("68cb7a60-5c15-4e90-9b76-c6d57bac50e4"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(304),
                            Developer = "Klei Entertainment",
                            GenreId = new Guid("fae50298-4855-41de-a3ab-79eb15904f5d"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(305),
                            Price = 9.99m,
                            Publisher = "Klei Entertainment",
                            Title = "Don't Starve"
                        },
                        new
                        {
                            Id = new Guid("a5f64243-b802-4621-b2e6-7a1730ba22f6"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(308),
                            Developer = "Wube Software LTD.",
                            GenreId = new Guid("dd7d7e7f-ccd4-4a7f-86a1-2722e0e0a340"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(308),
                            Price = 35.00m,
                            Publisher = "Wube Software LTD.",
                            Title = "Factorio"
                        },
                        new
                        {
                            Id = new Guid("552673b8-3767-45e0-8245-5e5648a0f87a"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(312),
                            Developer = "Klei Entertainment",
                            GenreId = new Guid("fae50298-4855-41de-a3ab-79eb15904f5d"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(312),
                            Price = 24.99m,
                            Publisher = "Klei Entertainment",
                            Title = "Oxygen Not Included"
                        },
                        new
                        {
                            Id = new Guid("38d97e98-b7e9-4938-af8b-767e9bbe3969"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(315),
                            Developer = "CD PROJEKT RED",
                            GenreId = new Guid("c1f30a98-144f-4ef1-9b41-07d7a946a92c"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(316),
                            Price = 39.99m,
                            Publisher = "CD PROJEKT RED",
                            Title = "The Witcher 3: Wild Hunt"
                        },
                        new
                        {
                            Id = new Guid("b6489611-f8ac-44be-a83a-1e87d7be99a0"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(322),
                            Developer = "Bethesda Game Studios",
                            GenreId = new Guid("7c3148a0-15f4-4e97-9d2f-1c035ab1e97a"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(322),
                            Price = 19.99m,
                            Publisher = "Bethesda Softworks",
                            Title = "The Elder Scrolls V: Skyrim"
                        },
                        new
                        {
                            Id = new Guid("2d99f6cf-7855-4f0e-b7e3-93ebd700b78c"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(325),
                            Developer = "Valve",
                            GenreId = new Guid("33a3db15-80a6-4e8a-b6cc-2500fc6bfa75"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(326),
                            Price = 0m,
                            Publisher = "Valve",
                            Title = "Counter-Strike 2"
                        },
                        new
                        {
                            Id = new Guid("06f4e51b-3ec4-4e62-84de-dcc20b1fe05c"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(329),
                            Developer = "Larian Studios",
                            GenreId = new Guid("c1f30a98-144f-4ef1-9b41-07d7a946a92c"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(329),
                            Price = 44.99m,
                            Publisher = "Larian Studios",
                            Title = "Divinity: Original Sin 2"
                        },
                        new
                        {
                            Id = new Guid("e4e7c258-031d-448a-8acf-86232c747e3d"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(332),
                            Developer = "ConcernedApe",
                            GenreId = new Guid("fae50298-4855-41de-a3ab-79eb15904f5d"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(332),
                            Price = 14.99m,
                            Publisher = "ConcernedApe",
                            Title = "Stardew Valley"
                        },
                        new
                        {
                            Id = new Guid("ea787761-8fc6-4a8d-9401-4f53e2b20036"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(336),
                            Developer = "FromSoftware",
                            GenreId = new Guid("0eb1e1f2-b5de-4d69-8237-4d28ab4c90ff"),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(336),
                            Price = 59.99m,
                            Publisher = "Activision",
                            Title = "Sekiro: Shadows Die Twice"
                        });
                });

            modelBuilder.Entity("GalleryMVC.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1f30a98-144f-4ef1-9b41-07d7a946a92c"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(493),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(493),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("5719e94d-9c86-48b1-85c6-5cdd84e2e1db"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(496),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(496),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("7c3148a0-15f4-4e97-9d2f-1c035ab1e97a"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(498),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(499),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("4bb407a1-128f-40e2-8363-5ff17312c87d"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(500),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(500),
                            Name = "Free to Play"
                        },
                        new
                        {
                            Id = new Guid("0eb1e1f2-b5de-4d69-8237-4d28ab4c90ff"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(502),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(502),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("fae50298-4855-41de-a3ab-79eb15904f5d"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(504),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(505),
                            Name = "Indie"
                        },
                        new
                        {
                            Id = new Guid("dd7d7e7f-ccd4-4a7f-86a1-2722e0e0a340"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(506),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(506),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("33a3db15-80a6-4e8a-b6cc-2500fc6bfa75"),
                            CreatedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(508),
                            LastEditedDate = new DateTime(2023, 10, 20, 15, 21, 54, 779, DateTimeKind.Utc).AddTicks(508),
                            Name = "Shooter"
                        });
                });

            modelBuilder.Entity("GalleryMVC.Models.Game", b =>
                {
                    b.HasOne("GalleryMVC.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
